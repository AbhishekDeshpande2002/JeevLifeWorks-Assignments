package com.jeevlifeworks.Student_Management_System_SpringBoot.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Represents a student entity in the system.
 * This entity is mapped to the "students" table in the database.
 * It includes basic fields such as id, name, age, grade, and address,
 * along with validation constraints to ensure data integrity.
 */

@Entity
@Table(name = "students")
@Data // Lombok annotation to generate getters, setters, toString, equals, and hashCode
@NoArgsConstructor // Lombok annotation to generate a no-args constructor
@AllArgsConstructor // Lombok annotation to generate a constructor with all fields
public class Student {
	
	/**
     * Unique identifier for each student.
     * This is the primary key and is auto-generated by the database.
     */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	/**
     * Name of the student.
     * Cannot be blank and must not be null in the database.
     */
	@NotBlank(message = "Name must not be empty")
	@Column(nullable = false)
	private String name;
	
	/**
     * Age of the student.
     * Must be a positive integer greater than or equal to 1.
     */
	@Min(value = 1, message = "Age must be positive")
	@Column(nullable = false)
	private int age;
	
	 /**
     * Grade of the student.
     * Must match a valid pattern such as A+, B, C-, D.
     * Cannot be blank.
     */
	@NotBlank(message = "Grade cannot be empty")
	@Pattern(regexp = "^[A-D][+-]?$", message = "Grade must match patterns like A+, B, C-")
	private String grade;
	
	/**
	 * Address of student
	 */
	private String address;
}
