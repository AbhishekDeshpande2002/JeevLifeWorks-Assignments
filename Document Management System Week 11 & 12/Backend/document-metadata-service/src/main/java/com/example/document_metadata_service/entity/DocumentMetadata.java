package com.example.document_metadata_service.entity;

import java.time.LocalDateTime;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import lombok.*;

/**
 * Entity class representing document metadata.
 *
 * This entity stores metadata information about uploaded documents,
 * such as title, description, file details, and uploader information.
 * 
 * Lombok annotations are used to reduce boilerplate code:
 *  - @Data: Generates getters, setters, equals, hashCode, toString
 *  - @NoArgsConstructor: Creates a no-argument constructor
 *  - @AllArgsConstructor: Creates a constructor with all fields
 *  - @Builder: Enables builder pattern for object creation
 */
@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class DocumentMetadata {

    /**
     * Primary key - auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Title of the document (required field).
     * Validation ensures it's not blank.
     */
    @NotBlank(message = "Title is required")
    private String title;

    /**
     * Optional description about the document.
     */
    private String description;

    /**
     * Original file name of the uploaded document.
     */
    private String fileName;

    /**
     * Size of the file in bytes.
     */
    private Long fileSize;

    /**
     * Timestamp of when the document was uploaded.
     * Using LocalDateTime (better than java.sql.Date).
     */
    private LocalDateTime uploadDate;

    /**
     * Name/username of the person who uploaded the document.
     */
    private String uploadedBy;
}
